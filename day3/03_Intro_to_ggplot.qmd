---
title: "An Introduction to ggplot"
author: "David A Hughes"
format: 
  revealjs:
    slide-number: true
    aspect-ratio: 16:9
    theme: [default, ../css/custom_white.scss]
    footer: "An Introduction to ggplot"
    logo: "../images/pb_purple.png"
    scrollable: true
    chalkboard: true
    incremental: false 
    code-line-numbers: false
editor: visual
---

```{r}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
```

## The Grammer of Graphics {.smaller}

:::::: columns
:::: {.column width="30%"}
::: {style="text-align: center;"}
![](https://ggplot2.tidyverse.org/logo.png){width="90%"}
:::
::::

::: {.column width="70%"}
The [ggplot2](https://ggplot2.tidyverse.org) package is designed to make data visualizations easier to create, customize, and interpret.

-   Grammar of Graphics structured approach
    -   data
    -   aesthetic mappings
        -   position, color, and size
    -   geometries
        -   shapes (points, lines, bar, box plot, tiles)
    -   scales
    -   faceting
        -   sub-plots
    -   themes
        -   background colors, grid lines, text
:::
::::::

## Layers

<br>

-   ggplot are built in **layers**
    -   define data to be plot using aesthetics aes()
    -   add layers to define how the data is plot

## Basic ggplot syntax {.smaller}

::::: columns
::: {.column width="\"20%"}
-   define aesthetics
    -   aes()
    -   the data to be plotted
-   then add geometrics
    -   geom\_###()
    -   what is plotted
:::

::: {.column width="\"80%"}
<br>

```{r}
iris |> ggplot(aes(x = Sepal.Width, y = Petal.Length)) +
  geom_point()
```
:::
:::::

## Basic ggplot syntax cont'd {.smaller}

::::: columns
::: {.column width="\"20%"}
-   define aesthetics
    -   aes()
    -   the data to be plotted
    -   change color and size of data
-   then add geometrics
    -   geom\_###()
    -   what is plotted
:::

::: {.column width="\"80%"}
<br>

```{r}
iris |> ggplot(aes(x = Sepal.Width, y = Petal.Length)) +
  geom_point(aes(color = Species), size = 3) 
```
:::
:::::

## Basic ggplot syntax cont'd 2 {.smaller}

::::: columns
::: {.column width="\"20%"}
-   define aesthetics
    -   aes()
    -   the data to be plotted
    -   change color and size of data
-   then add geometrics
    -   geom\_###()
    -   what is plotted
-   change theme
:::

::: {.column width="\"80%"}
<br>

```{r}
iris |> ggplot(aes(x = Sepal.Width, y = Petal.Length)) +
  geom_point(aes(color = Species), size = 3) +
  theme_bw()
```
:::
:::::

## Basic ggplot syntax cont'd 3 {.smaller}

::::: columns
::: {.column width="\"20%"}
-   define aesthetics
    -   aes()
    -   the data to be plotted
    -   change color and size of data
-   then add geometrics
    -   geom\_###()
    -   what is plotted
-   change theme
-   sub plot the data by species
:::

::: {.column width="\"80%"}
<br>

```{r}
iris |> ggplot(aes(x = Sepal.Width, y = Petal.Length)) +
  geom_point(aes(color = Species), size = 3) +
  theme_bw() +
  facet_wrap(.~Species)
```
:::
:::::

## Basic ggplot syntax cont'd 4 {.smaller}

::::: columns
::: {.column width="\"20%"}
-   define aesthetics
    -   aes()
    -   the data to be plotted
    -   change color and size of data
-   then add geometrics
    -   geom\_###()
    -   what is plotted
-   change theme
-   sub plot the data by species
-   change the scales
:::

::: {.column width="\"80%"}
<br>

```{r}
iris |> ggplot(aes(x = Sepal.Width, y = Petal.Length)) +
  geom_point(aes(color = Species), size = 3) +
  theme_bw() +
  facet_wrap(.~Species, scales = "free")
```
:::
:::::

## Basic ggplot syntax cont'd 5 {.smaller}

::::: columns
::: {.column width="\"20%"}
-   define aesthetics
    -   aes()
    -   the data to be plotted
    -   change color and size of data
-   then add geometrics
    -   geom\_###()
    -   what is plotted
-   change theme
-   sub plot the data by species
-   change the scales
-   add a regression line
:::

::: {.column width="\"80%"}
<br>

```{r}
iris |> ggplot(aes(x = Sepal.Width, y = Petal.Length)) +
  geom_point(aes(color = Species), size = 3) +
  theme_bw() +
  facet_wrap(.~Species, scales = "free") +
  geom_smooth(method = "lm", formula = y~x, 
              color = "black")
```
:::
:::::

## Basic ggplot syntax cont'd 6 {.smaller}

::::: columns
::: {.column width="\"20%"}
-   define aesthetics
    -   aes()
    -   the data to be plotted
    -   change color and size of data
-   then add geometrics
    -   geom\_###()
    -   what is plotted
-   change theme
-   sub plot the data by species
-   change the scales
-   add a regression line
-   edit the axes
:::

::: {.column width="\"80%"}
<br>

```{r}
iris |> ggplot(aes(x = Sepal.Width, y = Petal.Length)) +
  geom_point(aes(color = Species), size = 3) +
  theme_bw() +
  facet_wrap(.~Species, scales = "free") +
  geom_smooth(method = "lm", formula = y~x, 
              color = "black") +
  labs(x = "sepal width", y = "petal length")
```
:::
:::::

## Basic ggplot syntax cont'd 7 {.smaller}

::::: columns
::: {.column width="\"20%"}
-   define aesthetics
    -   aes()
    -   the data to be plotted
    -   change color and size of data
-   then add geometrics
    -   geom\_###()
    -   what is plotted
-   change theme
-   sub plot the data by species
-   change the scales
-   add a regression line
-   edit the axes
-   move the legend
:::

::: {.column width="\"80%"}
<br>

```{r}
iris |> ggplot(aes(x = Sepal.Width, y = Petal.Length)) +
  geom_point(aes(color = Species), size = 3) +
  theme_bw() +
  facet_wrap(.~Species, scales = "free") +
  geom_smooth(method = "lm", formula = y~x, 
              color = "black") +
  labs(x = "sepal width", y = "petal length") +
  theme(legend.position="bottom")
```
:::
:::::

## Basic ggplot syntax cont'd 8 {.smaller}

::::: columns
::: {.column width="\"20%"}
-   define aesthetics
    -   aes()
    -   the data to be plotted
    -   change color and size of data
-   then add geometrics
    -   geom\_###()
    -   what is plotted
-   change theme
-   sub plot the data by species
-   change the scales
-   add a regression line
-   edit the axes
-   move the legend
-   add a title and subtitle
:::

::: {.column width="\"80%"}
<br>

```{r}
iris |> ggplot(aes(x = Sepal.Width, y = Petal.Length)) +
  geom_point(aes(color = Species), size = 3) +
  theme_bw() +
  facet_wrap(.~Species, scales = "free") +
  geom_smooth(method = "lm", formula = y~x, 
              color = "black") +
  labs(x = "sepal width", y = "petal length") +
  theme(legend.position="bottom") +
  labs(title = "Sepal width and petal length by species", 
       subtitle = "some more information")
```
:::
:::::

## Other geoms

::::: columns
::: {.column width="50%"}
-   geom_point()
-   geom_abline()
-   geom_smooth()
-   geom_bar()
-   geom_boxplot()
-   geom_violin()
-   geom_density()
-   geom_histogram()
-   geom_line()
-   geom_vline()
-   geom_hline()
:::

::: {.column width="50%"}
-   geom_text()
-   geom_label()
-   geom_jitter()
-   geom_density_ridges()
-   geom_tile()
-   geom_waffle()
-   geom_area()
-   geom_bin2d()
-   geom_segment()
:::
:::::

## Useful resources

<br>

-   R for Data Science; Data Visualization [chapter](https://r4ds.hadley.nz/data-visualize)
-   Rsquared Academy's Data Visualization [bookdown](https://viz-ggplot2.rsquaredacademy.com/ggplot2-quicktour)
-   R Graph Gallery [website](https://r-graph-gallery.com/ggplot2-package.html)

# Practical 3.2

<br>

-   [practical](https://hughesevoanth.github.io/intro_to_r/day3/04_Practical_3.2.html)
-   [solutions](https://hughesevoanth.github.io/intro_to_r/day3/05_Solutions_3.2.html)
